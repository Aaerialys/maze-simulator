{"version":3,"sources":["App.js","serviceWorker.js","index.js","assets/images/logo.ico"],"names":["H","Math","floor","window","screen","height","W","width","Cell","props","className","style","backgroundColor","color","onMouseOver","dragOver","onMouseDown","Grid","state","grid","i","row","j","push","x","mousePress","onMouseUp","React","Component","App","Array","fill","map","mark","pressed","fid","stop","y","val","grid2","this","slice","setState","click","setVal","search","delay","Promise","resolve","setTimeout","stop2","bfs","dx","dy","p","toV","cur","id","length","console","log","d","sleep","href","src","logo","alt","onClick","setMark","clear","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.0068df74.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport logo from './assets/images/logo.ico'\n\nvar H=Math.floor(window.screen.height/25)-12,W=Math.floor(window.screen.width/25)-1;\n\nfunction Cell(props){\n    return(\n        <div className=\"cell\" style={{backgroundColor: props.color}} onMouseOver={() => props.dragOver(0)} onMouseDown={() => props.dragOver(1)}>\n            \n        </div>\n    );\n}\n\nclass Grid extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            color: [\"white\", \"lime\", \"red\", \"black\", \"#f37fff\", \"#bf49ff\",\"gold\"],\n        }\n    }\n    render(){\n        var grid=[];\n        for(let i=0;i<H;i++){\n            var row=[];\n            for(let j=0;j<W;j++) row.push(<Cell color={this.state.color[this.props.grid[i][j]]} dragOver={(x) => this.props.dragOver(i,j,x)}/>);\n            grid.push(<div>{row}</div>);\n        }\n        return(\n            <div onMouseDown={() => this.props.mousePress(1)} onMouseUp={() => this.props.mousePress(0)}>\n                {grid}\n            </div>\n        );\n    }\n}\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            grid: Array(H).fill().map(()=>Array(W).fill(0)),\n            mark: 0,\n            pressed: 0,\n            fid: 0,\n            stop: [],\n        };\n    }\n    setVal(x,y,val){\n        var grid2=this.state.grid.slice();\n        grid2[x][y]=val;\n        this.setState({grid:grid2});\n    }\n    dragOver(x,y,click){\n        if(!click&&!this.state.pressed) return;\n        if(this.state.grid[x][y]==this.state.mark) this.setVal(x,y,0);\n        else this.setVal(x,y,this.state.mark);\n        this.search(0);\n    }\n    setMark(x){\n        this.setState({mark:x});\n    }\n    mousePress(x){\n        this.setState({pressed:x});\n    }\n    sleep(delay) {\n      return new Promise(resolve => setTimeout(resolve, delay));\n    }\n    clear() {\n        var stop2=this.state.stop.slice(); stop2[this.state.fid-1]=1; this.setState({stop:stop2});\n        for(let i=0;i<H;i++) for(let j=0;j<W;j++) this.setVal(i,j,0);\n    }\n    search(delay){\n        var stop2=this.state.stop.slice(); stop2[this.state.fid-1]=1; this.setState({stop:stop2});\n        this.bfs(delay);\n    }\n    async bfs(delay){\n        var dx=[1,0,-1,0],dy=[0,1,0,-1],p=Array(H).fill().map(()=>Array(W)),toV=[],cur=0,id=this.state.fid; this.setState({fid:id+1});\n        for(let i=0;i<H;i++) for(let j=0;j<W;j++){\n            if(this.state.grid[i][j]>3) this.setVal(i,j,0);\n            else if(this.state.grid[i][j]==1){\n                p[i][j]=-1; toV.push([i,j]);\n            }\n            else if(this.state.grid[i][j]==3) p[i][j]=-1;\n        }\n        while(cur<toV.length){\n            if(this.state.stop[id]==1) break;\n            let x=toV[cur][0],y=toV[cur][1]; cur++;\n            console.log(x,y);\n            if(this.state.grid[x][y]==2){\n                while(p[x][y]!=-1){\n                    if(this.state.stop[id]==1) break;\n                    if(this.state.grid[x][y]==5) this.setVal(x,y,6);\n                    let d=p[x][y]; x-=dx[d]; y-=dy[d];\n                    if(delay) await this.sleep(delay);\n                }\n                break;\n            }\n            else if(this.state.grid[x][y]==4) this.setVal(x,y,5);\n            for(let i=0;i<4;i++) if(0<=x+dx[i]&&x+dx[i]<H&&0<=y+dy[i]&&y+dy[i]<W&&p[x+dx[i]][y+dy[i]]==null){\n                p[x+dx[i]][y+dy[i]]=i; toV.push([x+dx[i],y+dy[i]]);\n                if(this.state.grid[x+dx[i]][y+dy[i]]==0) this.setVal(x+dx[i],y+dy[i],4);\n            }\n            if(delay) await this.sleep(delay);\n        }\n    }\n    render(){\n        return (\n          <div>\n            <header>\n              <h1><a href=\"index.html\">Grid Simulator</a></h1>\n              <a href=\"https://aaerialys.cf\"><img src={logo} alt=\"logo\" /></a>\n            </header>\n            <div className=\"main\">\n                <p>Search algorithm simulator</p>\n            </div>\n            <div>\n                <button onClick={() => this.setMark(3)}>Add Wall</button>\n                <button onClick={() => this.setMark(1)}>Add Source</button>\n                <button onClick={() => this.setMark(2)}>Add Sink</button>\n                <button onClick={() => this.clear()}>Clear</button>\n                <button onClick={() => this.search(1)}>Search</button>\n                <Grid grid={this.state.grid} mousePress={(x) => this.mousePress(x)} dragOver={(x,y,click) => this.dragOver(x,y,click)}/>\n            </div>\n            <footer>\n              <div className=\"bottom\">\n                <p>2020 | <a href=\"https://aaerialys.cf\">Aaerialys</a></p>\n              </div>\n            </footer>\n          </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/logo.3ef91830.ico\";"],"sourceRoot":""}